// @ts-check
// Protractor configuration file, see link for more information
// https://github.com/angular/protractor/blob/master/lib/config.ts

const { SpecReporter } = require('jasmine-spec-reporter');

/**
 * @type { import("protractor").Config }
 */
exports.config = {
  allScriptsTimeout: 11000,
  specs: [
    './src/**/*.e2e-spec.ts'

  ],
  capabilities: {
    'browserName': 'chrome',
    chromeOptions: {
      binary: process.env.CHROME_BIN,
      args: ['--no-sandbox']
    }
  },
  directConnect: true,
  baseUrl: 'http://localhost:4200/',
  framework: 'jasmine',
  jasmineNodeOpts: {
    showColors: true,
    defaultTimeoutInterval: 30000,
    print: function() {}
  },

  onPrepare() {
    require('ts-node').register({
      project: require('path').join(__dirname, './tsconfig.json')
    });

    var jasmineReporters = require('jasmine-reporters');
    jasmine.getEnv().addReporter(new jasmineReporters.JUnitXmlReporter({
      consolidateAll: true,
      filePrefix: 'guitest-xmloutput',
      savePath: 'reports'
    }));
  }

  //onPrepare: function () {

  //    require('ts-node').register({
  //      project: require('path').join(__dirname, './tsconfig.json')
  //    });
  //  //console logs configurations
  //  jasmine.getEnv().addReporter(new SpecReporter({
  //    displayStacktrace: 'all', // display stacktrace for each failed assertion, values: (all|specs|summary|none) 
  //    displaySuccessesSummary: false, // display summary of all successes after execution 
  //    displayFailuresSummary: true, // display summary of all failures after execution 
  //    displayPendingSummary: true, // display summary of all pending specs after execution 
  //    displaySuccessfulSpec: true, // display each successful spec 
  //    displayFailedSpec: true, // display each failed spec 
  //    displayPendingSpec: false, // display each pending spec 
  //    displaySpecDuration: false, // display each spec duration 
  //    displaySuiteNumber: false, // display each suite number (hierarchical) 
  //    colors: {
  //      success: 'green',
  //      failure: 'red',
  //      pending: 'yellow'
  //    },
  //    prefixes: {
  //      success: '✓ ',
  //      failure: '✗ ',
  //      pending: '* '
  //    },
  //    customProcessors: []
  //  }));
  //}
};
